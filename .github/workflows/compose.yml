# see  examples/simple-docker-compose.yml/.github/main.yml
name: Simple Docker Compose

on:
  pull_request:
    types: [ labeled ]
  workflow_call:
    inputs: { }
    secrets: { }
env:
  COMPOSE_FILE: docker-compose.yml
  NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }}
jobs:
  simple-docker-compose:
    if: ${{ github.event.label.name == 'deploy' }}
    permissions:
      deployments: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run establish a ngrok tunnel
        id: expose_ngrok
        uses: wikiteq/ngrok-tunneling-action@master
        with:
          timeout: 1h
          port: 80
          ngrok_authtoken: ${{ secrets.NGROK_TOKEN }}
          tunnel_type: http

      - name: Test Ngrok fail
        if: ${{ steps.expose_ngrok.outputs.TUNNEL_URL == '' }}
        run: exit 1
        shell: bash

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ secrets.NGROK_TOKEN }}
          state: 'failure'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

      - uses: chrnorm/deployment-action@v2
        name: Create GitHub deployment
        id: deployment
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: development

      - name: Setup env
        run: cp .env.ci .env

      - name: Update server variable
        run: echo "MW_SITE_SERVER=${{ steps.expose_ngrok.outputs.TUNNEL_URL }}" >> .env
        shell: bash

      - name: Setup Docker Compose
        uses: yu-ichiro/spin-up-docker-compose-action@main
        with:
          file: ${{ env.COMPOSE_FILE }}
          cache-key: simple-docker-compose

      - name: Update deployment status (success)
        uses: chrnorm/deployment-status@v2
        if: success()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment-url: ${{ steps.expose_ngrok.outputs.TUNNEL_URL }}
          state: 'success'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

#      - name: Comment on PR
#        if: ${{ steps.expose_ngrok.outputs.TUNNEL_URL != '' && github.event_name == 'pull_request' }}
#        uses: mshick/add-pr-comment@v1
#        id: comment
#        with:
#          message: "Deployed to ${{ steps.expose_ngrok.outputs.TUNNEL_URL }}. Stay-alive time is 1 hour, re-run the action to re-deploy."
#          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Sleep
        run: docker-compose logs -f
        shell: bash

      - name: Update deployment status (success)
        uses: chrnorm/deployment-status@v2
        if: cancelled()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment-url: ${{ steps.expose_ngrok.outputs.TUNNEL_URL }}
          state: 'inactive'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

#      - name: Sleep
#        run: sleep 3600s
#        shell: bash
